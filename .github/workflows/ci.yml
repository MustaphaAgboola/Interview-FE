name: Node.js App Deploy to EKS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout Code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Install Node.js (for build and test)
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    # 3. Install Dependencies
    - name: Install dependencies
      run: npm install

    # 4. Install Docker Buildx for Caching Layers
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2


    # 6. Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    # 7. Login to Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    # 8. Build, Tag, and Push Docker Image with Caching
    - name: Build and Push Docker Image
      run: |
        docker buildx build \
        --platform linux/amd64 \
        --tag 6lackcoder/interview-fe:1.1 \
        --cache-from=type=registry,ref=6lackcoder/interview-fe:cache \
        --cache-to=type=inline \
        --push .

    # 9. Install kubectl
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.24.0'

    # 10. Update kubeconfig for EKS
    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name my-cluster --region us-east-1

    # 11. Deploy to EKS
    - name: Deploy to EKS
      run: |
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/service.yaml

    # 12. Check Pod Status after Deployment
    - name: Check Pod Status
      run: kubectl get pods -n default
